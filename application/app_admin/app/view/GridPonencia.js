/*

 * File: app/view/GridPonencia.js

 *

 * This file was generated by Sencha Architect version 2.1.0.

 * http://www.sencha.com/products/architect/

 *

 * This file requires use of the Ext JS 4.1.x library, under independent license.

 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more

 * details see http://www.sencha.com/license or contact license@sencha.com.

 *

 * This file will be auto-generated each and everytime you save your project.

 *

 * Do NOT hand edit this file.

 */



Ext.define('vision.view.GridPonencia', {

    extend: 'Ext.grid.Panel',

    alias: 'widget.gridPonencia',



    height: 300,

    id: 'gridponencia',

    itemId: 'gridponencia',

    title: 'Mantener Ponencia',

    columnLines: false,

    store: 'Ponencia',



    initComponent: function() {

        var me = this;



        Ext.applyIf(me, {

            columns: [

                {

                    xtype: 'rownumberer'

                },

                {

                    xtype: 'numbercolumn',

                    hidden: false,

                    width: 120,

                    defaultWidth: 120,

                    align: 'center',

                    dataIndex: 'id_pon',

                    text: 'Código de Ponencia',

                    format: '00'

                },

                {

                    xtype: 'gridcolumn',

                    width: 220,

                    defaultWidth: 200,

                    dataIndex: 'nom_pon',

                    text: 'Nombre Ponencia'

                },

                {

                    xtype: 'gridcolumn',

                    width: 200,

                    defaultWidth: 220,

                    dataIndex: 'nom_exp',

                    text: 'Expositor'

                },

                {

                    xtype: 'datecolumn',

                    dataIndex: 'fech_ini_pon',

                    text: 'Fecha Inicio',

                    format: 'd/m/Y H:i:s'

                },

                {

                    xtype: 'datecolumn',

                    dataIndex: 'fech_fin_pon',

                    text: 'Fecha Fin',

                    format: 'd/m/Y H:i:s'

                },

                {

                    xtype: 'gridcolumn',

                    dataIndex: 'duracion',

                    text: 'Duracion'

                },

                {

                    xtype: 'gridcolumn',

                    dataIndex: 'tip_pon_dsc',

                    text: 'Tipo'

                },

                {

                    xtype: 'gridcolumn',

                    dataIndex: 'dir_desc',

                    text: 'Dirigido'

                },

                {

                    xtype: 'gridcolumn',

                    dataIndex: 'amb_des',

                    text: 'Ambiente '

                },

                {

                    xtype: 'gridcolumn',

                    dataIndex: 'est_pon_desc',

                    text: 'Estado '

                }

            ],

            viewConfig: {



            },

            dockedItems: [

                {

                    xtype: 'pagingtoolbar',

                    dock: 'bottom',

                    width: 360,

                    afterPageText: 'de {0}',

                    beforePageText: 'Pagina',

                    displayInfo: true,

                    displayMsg: 'Ponencias {0} - {1} de {2}',

                    emptyMsg: 'No Existen Ponencias',

                    firstText: 'Primera Pagina',

                    lastText: 'Ultima Pagina',

                    prevText: 'Pagina Anterior',

                    refreshText: 'Actualizar',

                    store: 'Ponencia'

                },

                {

                    xtype: 'toolbar',

                    dock: 'top',

                    items: [

                        {

                            xtype: 'button',

                            handler: function(button, event) {

                                var winp=Ext.getCmp('winPonencia');


                                if(!winp){

                                    Ext.create('vision.view.MantenerPonencia');

                                winp=Ext.getCmp('winPonencia');}


                                //Ext.getCmp('cod_exp_pon').setDisabled(false);

                                Ext.getCmp('formPon').getForm().reset(); 

                                winp.show();
								winp.setTitle('Agregar Ponencia');

                            },

                            iconCls: 'icon-add',

                            text: 'Agregar Ponencia'

                        },

                        {

                            xtype: 'tbseparator'

                        },
							
							                        {
							
                            xtype: 'button',
							handler: function(button, event) {
							var winp=Ext.getCmp('winPonencia');	
                                if(!winp){

                                    Ext.create('vision.view.MantenerPonencia');

                                winp=Ext.getCmp('winPonencia');}
                                var id_pon=sessionStorage.getItem('id_pon');

                                if(id_pon!='-1'){

                                    //Ext.getCmp('cod_exp_pon').setDisabled(true);

                                    var record=Ext.getCmp('gridponencia').getStore().findRecord('id_pon',id_pon);

                                    Ext.getCmp('id_pon').setValue(record.get('id_pon'));

                                    Ext.getCmp('cod_eve_pon').setValue(record.get('cod_eve_pon'));

                                    Ext.getCmp('fech_ini_pon').setValue(Ext.Date.format(new Date(record.get('fech_ini_pon')), 'd-m-Y'));
									Ext.getCmp('horaIni').setValue(Ext.Date.format(new Date(record.get('fech_ini_pon')), 'H'));
									Ext.getCmp('minIni').setValue(Ext.Date.format(new Date(record.get('fech_ini_pon')), 'i'));

                                    Ext.getCmp('fech_fin_pon').setValue(Ext.Date.format(new Date(record.get('fech_fin_pon')), 'd-m-Y'));
									Ext.getCmp('horaFin').setValue(Ext.Date.format(new Date(record.get('fech_fin_pon')), 'H'));
									Ext.getCmp('minFin').setValue(Ext.Date.format(new Date(record.get('fech_fin_pon')), 'i'));

                                    Ext.getCmp('nom_pon').setValue(record.get('nom_pon'));

                                    Ext.getCmp('desc_pon').setValue(record.get('desc_pon'));

                                    Ext.getCmp('tipo_pon').setValue(record.get('tipo_pon'));

                                    Ext.getCmp('dirigido_a_pon').setValue(record.get('dirigido_a_pon'));

                                    Ext.getCmp('est_pon').setValue(record.get('est_pon'));

                                    Ext.getCmp('id_amb_pon').setValue(record.get('id_amb_pon'));
									Ext.getCmp('cod_fia_amb').setValue(record.get('cod_fia_amb'));
									Ext.getCmp('capac_amb').setValue(record.get('capac_amb'));
									

                                    // Ext.getCmp('id_req_pon').setValue(record.get('id_req_pon'));

                                    winp.show();
									winp.setTitle('Modificar Ponencia');




                                }else Ext.Msg.alert('Precaución','Debe seleccionar una ponencia.');





                            },

                            id: 'btnManPone',

                            iconCls: 'icon-edit',

                            text: 'Modificar Ponencia'

                        },

                        {

                            xtype: 'tbseparator'

                        },

                        {

                            xtype: 'button',

                            handler: function(button, event) {


                                var idpon=sessionStorage.getItem('id_pon');

                                if(idpon!=-1){

                                    var sponencia=Ext.getCmp('gridponencia').getStore();

                                    var record=Ext.getCmp('gridponencia').getStore().findRecord('id_pon',idpon);

                                    var opt=Ext.MessageBox.confirm('Comfirmar', 'Esta se guro que desea eliminar la:<br>Ponencia: <b>'+record.get('nom_pon')+'</b><br>Codigo: <b>'+idpon+'<b>',

                                    function(button) {

                                        if (button === 'yes') {

                                            sponencia.load({

                                                url:'../../administracion/ponencia/borrar_ponencia',

                                                method: 'POST',

                                                params:{'tipoSql':'delete','id_pon':idpon},

                                                scope: this,

                                                callback: function(records, operation, success,response) {

                                                    // the operation object

                                                    // contains all of the details of the load operation

                                                    //this.load();


                                                }


                                            });

                                        }//END if


                                    });

                                }else Ext.Msg.alert('Precaución','Debe seleccionar una ponencia.');



                            },

                            text: 'Eliminar Ponencia'

                        }

                    ]

                }

            ],

            listeners: {

                select: {

                    fn: me.onGridponenciaSelect,

                    scope: me

                }

            }

        });



        me.callParent(arguments);

    },



    onGridponenciaSelect: function(selModel, record, index, options) {

        sessionStorage.setItem('id_pon',record.get('id_pon'));

    }



});